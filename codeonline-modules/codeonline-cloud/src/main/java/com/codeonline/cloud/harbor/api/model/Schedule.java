/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.codeonline.cloud.harbor.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Schedule
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-30T20:20:43.840Z")
public class Schedule {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("creation_time")
  private String creationTime = null;

  @SerializedName("update_time")
  private String updateTime = null;

  @SerializedName("schedule")
  private ScheduleObj schedule = null;

  @SerializedName("parameters")
  private Map<String, Object> parameters = null;

   /**
   * The id of the schedule.
   * @return id
  **/
  @ApiModelProperty(value = "The id of the schedule.")
  public Integer getId() {
    return id;
  }

   /**
   * The status of the schedule.
   * @return status
  **/
  @ApiModelProperty(value = "The status of the schedule.")
  public String getStatus() {
    return status;
  }

   /**
   * the creation time of the schedule.
   * @return creationTime
  **/
  @ApiModelProperty(value = "the creation time of the schedule.")
  public String getCreationTime() {
    return creationTime;
  }

   /**
   * the update time of the schedule.
   * @return updateTime
  **/
  @ApiModelProperty(value = "the update time of the schedule.")
  public String getUpdateTime() {
    return updateTime;
  }

  public Schedule schedule(ScheduleObj schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(value = "")
  public ScheduleObj getSchedule() {
    return schedule;
  }

  public void setSchedule(ScheduleObj schedule) {
    this.schedule = schedule;
  }

  public Schedule parameters(Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public Schedule putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, Object>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * The parameters of schedule job
   * @return parameters
  **/
  @ApiModelProperty(value = "The parameters of schedule job")
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Schedule schedule = (Schedule) o;
    return Objects.equals(this.id, schedule.id) &&
        Objects.equals(this.status, schedule.status) &&
        Objects.equals(this.creationTime, schedule.creationTime) &&
        Objects.equals(this.updateTime, schedule.updateTime) &&
        Objects.equals(this.schedule, schedule.schedule) &&
        Objects.equals(this.parameters, schedule.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, creationTime, updateTime, schedule, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Schedule {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

