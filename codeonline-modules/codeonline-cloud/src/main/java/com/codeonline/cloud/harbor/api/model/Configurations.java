/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.codeonline.cloud.harbor.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Configurations
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-30T20:20:43.840Z")
public class Configurations {
  @SerializedName("auth_mode")
  private String authMode = null;

  @SerializedName("ldap_base_dn")
  private String ldapBaseDn = null;

  @SerializedName("ldap_filter")
  private String ldapFilter = null;

  @SerializedName("ldap_group_base_dn")
  private String ldapGroupBaseDn = null;

  @SerializedName("ldap_group_admin_dn")
  private String ldapGroupAdminDn = null;

  @SerializedName("ldap_group_attribute_name")
  private String ldapGroupAttributeName = null;

  @SerializedName("ldap_group_search_filter")
  private String ldapGroupSearchFilter = null;

  @SerializedName("ldap_group_search_scope")
  private Integer ldapGroupSearchScope = null;

  @SerializedName("ldap_scope")
  private Integer ldapScope = null;

  @SerializedName("ldap_search_dn")
  private String ldapSearchDn = null;

  @SerializedName("ldap_search_password")
  private String ldapSearchPassword = null;

  @SerializedName("ldap_timeout")
  private Integer ldapTimeout = null;

  @SerializedName("ldap_uid")
  private String ldapUid = null;

  @SerializedName("ldap_url")
  private String ldapUrl = null;

  @SerializedName("ldap_verify_cert")
  private Boolean ldapVerifyCert = null;

  @SerializedName("ldap_group_membership_attribute")
  private String ldapGroupMembershipAttribute = null;

  @SerializedName("project_creation_restriction")
  private String projectCreationRestriction = null;

  @SerializedName("read_only")
  private Boolean readOnly = null;

  @SerializedName("self_registration")
  private Boolean selfRegistration = null;

  @SerializedName("token_expiration")
  private Integer tokenExpiration = null;

  @SerializedName("uaa_client_id")
  private String uaaClientId = null;

  @SerializedName("uaa_client_secret")
  private String uaaClientSecret = null;

  @SerializedName("uaa_endpoint")
  private String uaaEndpoint = null;

  @SerializedName("uaa_verify_cert")
  private Boolean uaaVerifyCert = null;

  @SerializedName("http_authproxy_endpoint")
  private String httpAuthproxyEndpoint = null;

  @SerializedName("http_authproxy_tokenreview_endpoint")
  private String httpAuthproxyTokenreviewEndpoint = null;

  @SerializedName("http_authproxy_admin_groups")
  private String httpAuthproxyAdminGroups = null;

  @SerializedName("http_authproxy_admin_usernames")
  private String httpAuthproxyAdminUsernames = null;

  @SerializedName("http_authproxy_verify_cert")
  private Boolean httpAuthproxyVerifyCert = null;

  @SerializedName("http_authproxy_skip_search")
  private Boolean httpAuthproxySkipSearch = null;

  @SerializedName("http_authproxy_server_certificate")
  private String httpAuthproxyServerCertificate = null;

  @SerializedName("oidc_name")
  private String oidcName = null;

  @SerializedName("oidc_endpoint")
  private String oidcEndpoint = null;

  @SerializedName("oidc_client_id")
  private String oidcClientId = null;

  @SerializedName("oidc_client_secret")
  private String oidcClientSecret = null;

  @SerializedName("oidc_groups_claim")
  private String oidcGroupsClaim = null;

  @SerializedName("oidc_admin_group")
  private String oidcAdminGroup = null;

  @SerializedName("oidc_group_filter")
  private String oidcGroupFilter = null;

  @SerializedName("oidc_scope")
  private String oidcScope = null;

  @SerializedName("oidc_user_claim")
  private String oidcUserClaim = null;

  @SerializedName("oidc_verify_cert")
  private Boolean oidcVerifyCert = null;

  @SerializedName("oidc_auto_onboard")
  private Boolean oidcAutoOnboard = null;

  @SerializedName("oidc_extra_redirect_parms")
  private String oidcExtraRedirectParms = null;

  @SerializedName("robot_token_duration")
  private Integer robotTokenDuration = null;

  @SerializedName("robot_name_prefix")
  private String robotNamePrefix = null;

  @SerializedName("notification_enable")
  private Boolean notificationEnable = null;

  @SerializedName("quota_per_project_enable")
  private Boolean quotaPerProjectEnable = null;

  @SerializedName("storage_per_project")
  private Integer storagePerProject = null;

  @SerializedName("audit_log_forward_endpoint")
  private String auditLogForwardEndpoint = null;

  @SerializedName("skip_audit_log_database")
  private Boolean skipAuditLogDatabase = null;

  @SerializedName("session_timeout")
  private Integer sessionTimeout = null;

  public Configurations authMode(String authMode) {
    this.authMode = authMode;
    return this;
  }

   /**
   * The auth mode of current system, such as \&quot;db_auth\&quot;, \&quot;ldap_auth\&quot;, \&quot;oidc_auth\&quot;
   * @return authMode
  **/
  @ApiModelProperty(value = "The auth mode of current system, such as \"db_auth\", \"ldap_auth\", \"oidc_auth\"")
  public String getAuthMode() {
    return authMode;
  }

  public void setAuthMode(String authMode) {
    this.authMode = authMode;
  }

  public Configurations ldapBaseDn(String ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
    return this;
  }

   /**
   * The Base DN for LDAP binding.
   * @return ldapBaseDn
  **/
  @ApiModelProperty(value = "The Base DN for LDAP binding.")
  public String getLdapBaseDn() {
    return ldapBaseDn;
  }

  public void setLdapBaseDn(String ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
  }

  public Configurations ldapFilter(String ldapFilter) {
    this.ldapFilter = ldapFilter;
    return this;
  }

   /**
   * The filter for LDAP search
   * @return ldapFilter
  **/
  @ApiModelProperty(value = "The filter for LDAP search")
  public String getLdapFilter() {
    return ldapFilter;
  }

  public void setLdapFilter(String ldapFilter) {
    this.ldapFilter = ldapFilter;
  }

  public Configurations ldapGroupBaseDn(String ldapGroupBaseDn) {
    this.ldapGroupBaseDn = ldapGroupBaseDn;
    return this;
  }

   /**
   * The base DN to search LDAP group.
   * @return ldapGroupBaseDn
  **/
  @ApiModelProperty(value = "The base DN to search LDAP group.")
  public String getLdapGroupBaseDn() {
    return ldapGroupBaseDn;
  }

  public void setLdapGroupBaseDn(String ldapGroupBaseDn) {
    this.ldapGroupBaseDn = ldapGroupBaseDn;
  }

  public Configurations ldapGroupAdminDn(String ldapGroupAdminDn) {
    this.ldapGroupAdminDn = ldapGroupAdminDn;
    return this;
  }

   /**
   * Specify the ldap group which have the same privilege with Harbor admin
   * @return ldapGroupAdminDn
  **/
  @ApiModelProperty(value = "Specify the ldap group which have the same privilege with Harbor admin")
  public String getLdapGroupAdminDn() {
    return ldapGroupAdminDn;
  }

  public void setLdapGroupAdminDn(String ldapGroupAdminDn) {
    this.ldapGroupAdminDn = ldapGroupAdminDn;
  }

  public Configurations ldapGroupAttributeName(String ldapGroupAttributeName) {
    this.ldapGroupAttributeName = ldapGroupAttributeName;
    return this;
  }

   /**
   * The attribute which is used as identity of the LDAP group, default is cn.&#39;
   * @return ldapGroupAttributeName
  **/
  @ApiModelProperty(value = "The attribute which is used as identity of the LDAP group, default is cn.'")
  public String getLdapGroupAttributeName() {
    return ldapGroupAttributeName;
  }

  public void setLdapGroupAttributeName(String ldapGroupAttributeName) {
    this.ldapGroupAttributeName = ldapGroupAttributeName;
  }

  public Configurations ldapGroupSearchFilter(String ldapGroupSearchFilter) {
    this.ldapGroupSearchFilter = ldapGroupSearchFilter;
    return this;
  }

   /**
   * The filter to search the ldap group
   * @return ldapGroupSearchFilter
  **/
  @ApiModelProperty(value = "The filter to search the ldap group")
  public String getLdapGroupSearchFilter() {
    return ldapGroupSearchFilter;
  }

  public void setLdapGroupSearchFilter(String ldapGroupSearchFilter) {
    this.ldapGroupSearchFilter = ldapGroupSearchFilter;
  }

  public Configurations ldapGroupSearchScope(Integer ldapGroupSearchScope) {
    this.ldapGroupSearchScope = ldapGroupSearchScope;
    return this;
  }

   /**
   * The scope to search ldap group. &#39;&#39;0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE&#39;&#39;
   * @return ldapGroupSearchScope
  **/
  @ApiModelProperty(value = "The scope to search ldap group. ''0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE''")
  public Integer getLdapGroupSearchScope() {
    return ldapGroupSearchScope;
  }

  public void setLdapGroupSearchScope(Integer ldapGroupSearchScope) {
    this.ldapGroupSearchScope = ldapGroupSearchScope;
  }

  public Configurations ldapScope(Integer ldapScope) {
    this.ldapScope = ldapScope;
    return this;
  }

   /**
   * The scope to search ldap users,&#39;0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE&#39;
   * @return ldapScope
  **/
  @ApiModelProperty(value = "The scope to search ldap users,'0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE'")
  public Integer getLdapScope() {
    return ldapScope;
  }

  public void setLdapScope(Integer ldapScope) {
    this.ldapScope = ldapScope;
  }

  public Configurations ldapSearchDn(String ldapSearchDn) {
    this.ldapSearchDn = ldapSearchDn;
    return this;
  }

   /**
   * The DN of the user to do the search.
   * @return ldapSearchDn
  **/
  @ApiModelProperty(value = "The DN of the user to do the search.")
  public String getLdapSearchDn() {
    return ldapSearchDn;
  }

  public void setLdapSearchDn(String ldapSearchDn) {
    this.ldapSearchDn = ldapSearchDn;
  }

  public Configurations ldapSearchPassword(String ldapSearchPassword) {
    this.ldapSearchPassword = ldapSearchPassword;
    return this;
  }

   /**
   * The password of the ldap search dn
   * @return ldapSearchPassword
  **/
  @ApiModelProperty(value = "The password of the ldap search dn")
  public String getLdapSearchPassword() {
    return ldapSearchPassword;
  }

  public void setLdapSearchPassword(String ldapSearchPassword) {
    this.ldapSearchPassword = ldapSearchPassword;
  }

  public Configurations ldapTimeout(Integer ldapTimeout) {
    this.ldapTimeout = ldapTimeout;
    return this;
  }

   /**
   * Timeout in seconds for connection to LDAP server
   * @return ldapTimeout
  **/
  @ApiModelProperty(value = "Timeout in seconds for connection to LDAP server")
  public Integer getLdapTimeout() {
    return ldapTimeout;
  }

  public void setLdapTimeout(Integer ldapTimeout) {
    this.ldapTimeout = ldapTimeout;
  }

  public Configurations ldapUid(String ldapUid) {
    this.ldapUid = ldapUid;
    return this;
  }

   /**
   * The attribute which is used as identity for the LDAP binding, such as \&quot;CN\&quot; or \&quot;SAMAccountname\&quot;
   * @return ldapUid
  **/
  @ApiModelProperty(value = "The attribute which is used as identity for the LDAP binding, such as \"CN\" or \"SAMAccountname\"")
  public String getLdapUid() {
    return ldapUid;
  }

  public void setLdapUid(String ldapUid) {
    this.ldapUid = ldapUid;
  }

  public Configurations ldapUrl(String ldapUrl) {
    this.ldapUrl = ldapUrl;
    return this;
  }

   /**
   * The URL of LDAP server
   * @return ldapUrl
  **/
  @ApiModelProperty(value = "The URL of LDAP server")
  public String getLdapUrl() {
    return ldapUrl;
  }

  public void setLdapUrl(String ldapUrl) {
    this.ldapUrl = ldapUrl;
  }

  public Configurations ldapVerifyCert(Boolean ldapVerifyCert) {
    this.ldapVerifyCert = ldapVerifyCert;
    return this;
  }

   /**
   * Whether verify your OIDC server certificate, disable it if your OIDC server is hosted via self-hosted certificate.
   * @return ldapVerifyCert
  **/
  @ApiModelProperty(value = "Whether verify your OIDC server certificate, disable it if your OIDC server is hosted via self-hosted certificate.")
  public Boolean isLdapVerifyCert() {
    return ldapVerifyCert;
  }

  public void setLdapVerifyCert(Boolean ldapVerifyCert) {
    this.ldapVerifyCert = ldapVerifyCert;
  }

  public Configurations ldapGroupMembershipAttribute(String ldapGroupMembershipAttribute) {
    this.ldapGroupMembershipAttribute = ldapGroupMembershipAttribute;
    return this;
  }

   /**
   * The user attribute to identify the group membership
   * @return ldapGroupMembershipAttribute
  **/
  @ApiModelProperty(value = "The user attribute to identify the group membership")
  public String getLdapGroupMembershipAttribute() {
    return ldapGroupMembershipAttribute;
  }

  public void setLdapGroupMembershipAttribute(String ldapGroupMembershipAttribute) {
    this.ldapGroupMembershipAttribute = ldapGroupMembershipAttribute;
  }

  public Configurations projectCreationRestriction(String projectCreationRestriction) {
    this.projectCreationRestriction = projectCreationRestriction;
    return this;
  }

   /**
   * Indicate who can create projects, it could be &#39;&#39;adminonly&#39;&#39; or &#39;&#39;everyone&#39;&#39;.
   * @return projectCreationRestriction
  **/
  @ApiModelProperty(value = "Indicate who can create projects, it could be ''adminonly'' or ''everyone''.")
  public String getProjectCreationRestriction() {
    return projectCreationRestriction;
  }

  public void setProjectCreationRestriction(String projectCreationRestriction) {
    this.projectCreationRestriction = projectCreationRestriction;
  }

  public Configurations readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * The flag to indicate whether Harbor is in readonly mode.
   * @return readOnly
  **/
  @ApiModelProperty(value = "The flag to indicate whether Harbor is in readonly mode.")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public Configurations selfRegistration(Boolean selfRegistration) {
    this.selfRegistration = selfRegistration;
    return this;
  }

   /**
   * Whether the Harbor instance supports self-registration.  If it&#39;&#39;s set to false, admin need to add user to the instance.
   * @return selfRegistration
  **/
  @ApiModelProperty(value = "Whether the Harbor instance supports self-registration.  If it''s set to false, admin need to add user to the instance.")
  public Boolean isSelfRegistration() {
    return selfRegistration;
  }

  public void setSelfRegistration(Boolean selfRegistration) {
    this.selfRegistration = selfRegistration;
  }

  public Configurations tokenExpiration(Integer tokenExpiration) {
    this.tokenExpiration = tokenExpiration;
    return this;
  }

   /**
   * The expiration time of the token for internal Registry, in minutes.
   * @return tokenExpiration
  **/
  @ApiModelProperty(value = "The expiration time of the token for internal Registry, in minutes.")
  public Integer getTokenExpiration() {
    return tokenExpiration;
  }

  public void setTokenExpiration(Integer tokenExpiration) {
    this.tokenExpiration = tokenExpiration;
  }

  public Configurations uaaClientId(String uaaClientId) {
    this.uaaClientId = uaaClientId;
    return this;
  }

   /**
   * The client id of UAA
   * @return uaaClientId
  **/
  @ApiModelProperty(value = "The client id of UAA")
  public String getUaaClientId() {
    return uaaClientId;
  }

  public void setUaaClientId(String uaaClientId) {
    this.uaaClientId = uaaClientId;
  }

  public Configurations uaaClientSecret(String uaaClientSecret) {
    this.uaaClientSecret = uaaClientSecret;
    return this;
  }

   /**
   * The client secret of the UAA
   * @return uaaClientSecret
  **/
  @ApiModelProperty(value = "The client secret of the UAA")
  public String getUaaClientSecret() {
    return uaaClientSecret;
  }

  public void setUaaClientSecret(String uaaClientSecret) {
    this.uaaClientSecret = uaaClientSecret;
  }

  public Configurations uaaEndpoint(String uaaEndpoint) {
    this.uaaEndpoint = uaaEndpoint;
    return this;
  }

   /**
   * The endpoint of the UAA
   * @return uaaEndpoint
  **/
  @ApiModelProperty(value = "The endpoint of the UAA")
  public String getUaaEndpoint() {
    return uaaEndpoint;
  }

  public void setUaaEndpoint(String uaaEndpoint) {
    this.uaaEndpoint = uaaEndpoint;
  }

  public Configurations uaaVerifyCert(Boolean uaaVerifyCert) {
    this.uaaVerifyCert = uaaVerifyCert;
    return this;
  }

   /**
   * Verify the certificate in UAA server
   * @return uaaVerifyCert
  **/
  @ApiModelProperty(value = "Verify the certificate in UAA server")
  public Boolean isUaaVerifyCert() {
    return uaaVerifyCert;
  }

  public void setUaaVerifyCert(Boolean uaaVerifyCert) {
    this.uaaVerifyCert = uaaVerifyCert;
  }

  public Configurations httpAuthproxyEndpoint(String httpAuthproxyEndpoint) {
    this.httpAuthproxyEndpoint = httpAuthproxyEndpoint;
    return this;
  }

   /**
   * The endpoint of the HTTP auth
   * @return httpAuthproxyEndpoint
  **/
  @ApiModelProperty(value = "The endpoint of the HTTP auth")
  public String getHttpAuthproxyEndpoint() {
    return httpAuthproxyEndpoint;
  }

  public void setHttpAuthproxyEndpoint(String httpAuthproxyEndpoint) {
    this.httpAuthproxyEndpoint = httpAuthproxyEndpoint;
  }

  public Configurations httpAuthproxyTokenreviewEndpoint(String httpAuthproxyTokenreviewEndpoint) {
    this.httpAuthproxyTokenreviewEndpoint = httpAuthproxyTokenreviewEndpoint;
    return this;
  }

   /**
   * The token review endpoint
   * @return httpAuthproxyTokenreviewEndpoint
  **/
  @ApiModelProperty(value = "The token review endpoint")
  public String getHttpAuthproxyTokenreviewEndpoint() {
    return httpAuthproxyTokenreviewEndpoint;
  }

  public void setHttpAuthproxyTokenreviewEndpoint(String httpAuthproxyTokenreviewEndpoint) {
    this.httpAuthproxyTokenreviewEndpoint = httpAuthproxyTokenreviewEndpoint;
  }

  public Configurations httpAuthproxyAdminGroups(String httpAuthproxyAdminGroups) {
    this.httpAuthproxyAdminGroups = httpAuthproxyAdminGroups;
    return this;
  }

   /**
   * The group which has the harbor admin privileges
   * @return httpAuthproxyAdminGroups
  **/
  @ApiModelProperty(value = "The group which has the harbor admin privileges")
  public String getHttpAuthproxyAdminGroups() {
    return httpAuthproxyAdminGroups;
  }

  public void setHttpAuthproxyAdminGroups(String httpAuthproxyAdminGroups) {
    this.httpAuthproxyAdminGroups = httpAuthproxyAdminGroups;
  }

  public Configurations httpAuthproxyAdminUsernames(String httpAuthproxyAdminUsernames) {
    this.httpAuthproxyAdminUsernames = httpAuthproxyAdminUsernames;
    return this;
  }

   /**
   * The username which has the harbor admin privileges
   * @return httpAuthproxyAdminUsernames
  **/
  @ApiModelProperty(value = "The username which has the harbor admin privileges")
  public String getHttpAuthproxyAdminUsernames() {
    return httpAuthproxyAdminUsernames;
  }

  public void setHttpAuthproxyAdminUsernames(String httpAuthproxyAdminUsernames) {
    this.httpAuthproxyAdminUsernames = httpAuthproxyAdminUsernames;
  }

  public Configurations httpAuthproxyVerifyCert(Boolean httpAuthproxyVerifyCert) {
    this.httpAuthproxyVerifyCert = httpAuthproxyVerifyCert;
    return this;
  }

   /**
   * Verify the HTTP auth provider&#39;s certificate
   * @return httpAuthproxyVerifyCert
  **/
  @ApiModelProperty(value = "Verify the HTTP auth provider's certificate")
  public Boolean isHttpAuthproxyVerifyCert() {
    return httpAuthproxyVerifyCert;
  }

  public void setHttpAuthproxyVerifyCert(Boolean httpAuthproxyVerifyCert) {
    this.httpAuthproxyVerifyCert = httpAuthproxyVerifyCert;
  }

  public Configurations httpAuthproxySkipSearch(Boolean httpAuthproxySkipSearch) {
    this.httpAuthproxySkipSearch = httpAuthproxySkipSearch;
    return this;
  }

   /**
   * Search user before onboard
   * @return httpAuthproxySkipSearch
  **/
  @ApiModelProperty(value = "Search user before onboard")
  public Boolean isHttpAuthproxySkipSearch() {
    return httpAuthproxySkipSearch;
  }

  public void setHttpAuthproxySkipSearch(Boolean httpAuthproxySkipSearch) {
    this.httpAuthproxySkipSearch = httpAuthproxySkipSearch;
  }

  public Configurations httpAuthproxyServerCertificate(String httpAuthproxyServerCertificate) {
    this.httpAuthproxyServerCertificate = httpAuthproxyServerCertificate;
    return this;
  }

   /**
   * The certificate of the HTTP auth provider
   * @return httpAuthproxyServerCertificate
  **/
  @ApiModelProperty(value = "The certificate of the HTTP auth provider")
  public String getHttpAuthproxyServerCertificate() {
    return httpAuthproxyServerCertificate;
  }

  public void setHttpAuthproxyServerCertificate(String httpAuthproxyServerCertificate) {
    this.httpAuthproxyServerCertificate = httpAuthproxyServerCertificate;
  }

  public Configurations oidcName(String oidcName) {
    this.oidcName = oidcName;
    return this;
  }

   /**
   * The OIDC provider name
   * @return oidcName
  **/
  @ApiModelProperty(value = "The OIDC provider name")
  public String getOidcName() {
    return oidcName;
  }

  public void setOidcName(String oidcName) {
    this.oidcName = oidcName;
  }

  public Configurations oidcEndpoint(String oidcEndpoint) {
    this.oidcEndpoint = oidcEndpoint;
    return this;
  }

   /**
   * The endpoint of the OIDC provider
   * @return oidcEndpoint
  **/
  @ApiModelProperty(value = "The endpoint of the OIDC provider")
  public String getOidcEndpoint() {
    return oidcEndpoint;
  }

  public void setOidcEndpoint(String oidcEndpoint) {
    this.oidcEndpoint = oidcEndpoint;
  }

  public Configurations oidcClientId(String oidcClientId) {
    this.oidcClientId = oidcClientId;
    return this;
  }

   /**
   * The client ID of the OIDC provider
   * @return oidcClientId
  **/
  @ApiModelProperty(value = "The client ID of the OIDC provider")
  public String getOidcClientId() {
    return oidcClientId;
  }

  public void setOidcClientId(String oidcClientId) {
    this.oidcClientId = oidcClientId;
  }

  public Configurations oidcClientSecret(String oidcClientSecret) {
    this.oidcClientSecret = oidcClientSecret;
    return this;
  }

   /**
   * The OIDC provider secret
   * @return oidcClientSecret
  **/
  @ApiModelProperty(value = "The OIDC provider secret")
  public String getOidcClientSecret() {
    return oidcClientSecret;
  }

  public void setOidcClientSecret(String oidcClientSecret) {
    this.oidcClientSecret = oidcClientSecret;
  }

  public Configurations oidcGroupsClaim(String oidcGroupsClaim) {
    this.oidcGroupsClaim = oidcGroupsClaim;
    return this;
  }

   /**
   * The attribute claims the group name
   * @return oidcGroupsClaim
  **/
  @ApiModelProperty(value = "The attribute claims the group name")
  public String getOidcGroupsClaim() {
    return oidcGroupsClaim;
  }

  public void setOidcGroupsClaim(String oidcGroupsClaim) {
    this.oidcGroupsClaim = oidcGroupsClaim;
  }

  public Configurations oidcAdminGroup(String oidcAdminGroup) {
    this.oidcAdminGroup = oidcAdminGroup;
    return this;
  }

   /**
   * The OIDC group which has the harbor admin privileges
   * @return oidcAdminGroup
  **/
  @ApiModelProperty(value = "The OIDC group which has the harbor admin privileges")
  public String getOidcAdminGroup() {
    return oidcAdminGroup;
  }

  public void setOidcAdminGroup(String oidcAdminGroup) {
    this.oidcAdminGroup = oidcAdminGroup;
  }

  public Configurations oidcGroupFilter(String oidcGroupFilter) {
    this.oidcGroupFilter = oidcGroupFilter;
    return this;
  }

   /**
   * The OIDC group filter which filters out the group name doesn&#39;t match the regular expression
   * @return oidcGroupFilter
  **/
  @ApiModelProperty(value = "The OIDC group filter which filters out the group name doesn't match the regular expression")
  public String getOidcGroupFilter() {
    return oidcGroupFilter;
  }

  public void setOidcGroupFilter(String oidcGroupFilter) {
    this.oidcGroupFilter = oidcGroupFilter;
  }

  public Configurations oidcScope(String oidcScope) {
    this.oidcScope = oidcScope;
    return this;
  }

   /**
   * The scope of the OIDC provider
   * @return oidcScope
  **/
  @ApiModelProperty(value = "The scope of the OIDC provider")
  public String getOidcScope() {
    return oidcScope;
  }

  public void setOidcScope(String oidcScope) {
    this.oidcScope = oidcScope;
  }

  public Configurations oidcUserClaim(String oidcUserClaim) {
    this.oidcUserClaim = oidcUserClaim;
    return this;
  }

   /**
   * The attribute claims the username
   * @return oidcUserClaim
  **/
  @ApiModelProperty(value = "The attribute claims the username")
  public String getOidcUserClaim() {
    return oidcUserClaim;
  }

  public void setOidcUserClaim(String oidcUserClaim) {
    this.oidcUserClaim = oidcUserClaim;
  }

  public Configurations oidcVerifyCert(Boolean oidcVerifyCert) {
    this.oidcVerifyCert = oidcVerifyCert;
    return this;
  }

   /**
   * Verify the OIDC provider&#39;s certificate&#39;
   * @return oidcVerifyCert
  **/
  @ApiModelProperty(value = "Verify the OIDC provider's certificate'")
  public Boolean isOidcVerifyCert() {
    return oidcVerifyCert;
  }

  public void setOidcVerifyCert(Boolean oidcVerifyCert) {
    this.oidcVerifyCert = oidcVerifyCert;
  }

  public Configurations oidcAutoOnboard(Boolean oidcAutoOnboard) {
    this.oidcAutoOnboard = oidcAutoOnboard;
    return this;
  }

   /**
   * Auto onboard the OIDC user
   * @return oidcAutoOnboard
  **/
  @ApiModelProperty(value = "Auto onboard the OIDC user")
  public Boolean isOidcAutoOnboard() {
    return oidcAutoOnboard;
  }

  public void setOidcAutoOnboard(Boolean oidcAutoOnboard) {
    this.oidcAutoOnboard = oidcAutoOnboard;
  }

  public Configurations oidcExtraRedirectParms(String oidcExtraRedirectParms) {
    this.oidcExtraRedirectParms = oidcExtraRedirectParms;
    return this;
  }

   /**
   * Extra parameters to add when redirect request to OIDC provider
   * @return oidcExtraRedirectParms
  **/
  @ApiModelProperty(value = "Extra parameters to add when redirect request to OIDC provider")
  public String getOidcExtraRedirectParms() {
    return oidcExtraRedirectParms;
  }

  public void setOidcExtraRedirectParms(String oidcExtraRedirectParms) {
    this.oidcExtraRedirectParms = oidcExtraRedirectParms;
  }

  public Configurations robotTokenDuration(Integer robotTokenDuration) {
    this.robotTokenDuration = robotTokenDuration;
    return this;
  }

   /**
   * The robot account token duration in days
   * @return robotTokenDuration
  **/
  @ApiModelProperty(value = "The robot account token duration in days")
  public Integer getRobotTokenDuration() {
    return robotTokenDuration;
  }

  public void setRobotTokenDuration(Integer robotTokenDuration) {
    this.robotTokenDuration = robotTokenDuration;
  }

  public Configurations robotNamePrefix(String robotNamePrefix) {
    this.robotNamePrefix = robotNamePrefix;
    return this;
  }

   /**
   * The rebot account name prefix
   * @return robotNamePrefix
  **/
  @ApiModelProperty(value = "The rebot account name prefix")
  public String getRobotNamePrefix() {
    return robotNamePrefix;
  }

  public void setRobotNamePrefix(String robotNamePrefix) {
    this.robotNamePrefix = robotNamePrefix;
  }

  public Configurations notificationEnable(Boolean notificationEnable) {
    this.notificationEnable = notificationEnable;
    return this;
  }

   /**
   * Enable notification
   * @return notificationEnable
  **/
  @ApiModelProperty(value = "Enable notification")
  public Boolean isNotificationEnable() {
    return notificationEnable;
  }

  public void setNotificationEnable(Boolean notificationEnable) {
    this.notificationEnable = notificationEnable;
  }

  public Configurations quotaPerProjectEnable(Boolean quotaPerProjectEnable) {
    this.quotaPerProjectEnable = quotaPerProjectEnable;
    return this;
  }

   /**
   * Enable quota per project
   * @return quotaPerProjectEnable
  **/
  @ApiModelProperty(value = "Enable quota per project")
  public Boolean isQuotaPerProjectEnable() {
    return quotaPerProjectEnable;
  }

  public void setQuotaPerProjectEnable(Boolean quotaPerProjectEnable) {
    this.quotaPerProjectEnable = quotaPerProjectEnable;
  }

  public Configurations storagePerProject(Integer storagePerProject) {
    this.storagePerProject = storagePerProject;
    return this;
  }

   /**
   * The storage quota per project
   * @return storagePerProject
  **/
  @ApiModelProperty(value = "The storage quota per project")
  public Integer getStoragePerProject() {
    return storagePerProject;
  }

  public void setStoragePerProject(Integer storagePerProject) {
    this.storagePerProject = storagePerProject;
  }

  public Configurations auditLogForwardEndpoint(String auditLogForwardEndpoint) {
    this.auditLogForwardEndpoint = auditLogForwardEndpoint;
    return this;
  }

   /**
   * The audit log forward endpoint
   * @return auditLogForwardEndpoint
  **/
  @ApiModelProperty(value = "The audit log forward endpoint")
  public String getAuditLogForwardEndpoint() {
    return auditLogForwardEndpoint;
  }

  public void setAuditLogForwardEndpoint(String auditLogForwardEndpoint) {
    this.auditLogForwardEndpoint = auditLogForwardEndpoint;
  }

  public Configurations skipAuditLogDatabase(Boolean skipAuditLogDatabase) {
    this.skipAuditLogDatabase = skipAuditLogDatabase;
    return this;
  }

   /**
   * Skip audit log database
   * @return skipAuditLogDatabase
  **/
  @ApiModelProperty(value = "Skip audit log database")
  public Boolean isSkipAuditLogDatabase() {
    return skipAuditLogDatabase;
  }

  public void setSkipAuditLogDatabase(Boolean skipAuditLogDatabase) {
    this.skipAuditLogDatabase = skipAuditLogDatabase;
  }

  public Configurations sessionTimeout(Integer sessionTimeout) {
    this.sessionTimeout = sessionTimeout;
    return this;
  }

   /**
   * The session timeout for harbor, in minutes.
   * @return sessionTimeout
  **/
  @ApiModelProperty(value = "The session timeout for harbor, in minutes.")
  public Integer getSessionTimeout() {
    return sessionTimeout;
  }

  public void setSessionTimeout(Integer sessionTimeout) {
    this.sessionTimeout = sessionTimeout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Configurations configurations = (Configurations) o;
    return Objects.equals(this.authMode, configurations.authMode) &&
        Objects.equals(this.ldapBaseDn, configurations.ldapBaseDn) &&
        Objects.equals(this.ldapFilter, configurations.ldapFilter) &&
        Objects.equals(this.ldapGroupBaseDn, configurations.ldapGroupBaseDn) &&
        Objects.equals(this.ldapGroupAdminDn, configurations.ldapGroupAdminDn) &&
        Objects.equals(this.ldapGroupAttributeName, configurations.ldapGroupAttributeName) &&
        Objects.equals(this.ldapGroupSearchFilter, configurations.ldapGroupSearchFilter) &&
        Objects.equals(this.ldapGroupSearchScope, configurations.ldapGroupSearchScope) &&
        Objects.equals(this.ldapScope, configurations.ldapScope) &&
        Objects.equals(this.ldapSearchDn, configurations.ldapSearchDn) &&
        Objects.equals(this.ldapSearchPassword, configurations.ldapSearchPassword) &&
        Objects.equals(this.ldapTimeout, configurations.ldapTimeout) &&
        Objects.equals(this.ldapUid, configurations.ldapUid) &&
        Objects.equals(this.ldapUrl, configurations.ldapUrl) &&
        Objects.equals(this.ldapVerifyCert, configurations.ldapVerifyCert) &&
        Objects.equals(this.ldapGroupMembershipAttribute, configurations.ldapGroupMembershipAttribute) &&
        Objects.equals(this.projectCreationRestriction, configurations.projectCreationRestriction) &&
        Objects.equals(this.readOnly, configurations.readOnly) &&
        Objects.equals(this.selfRegistration, configurations.selfRegistration) &&
        Objects.equals(this.tokenExpiration, configurations.tokenExpiration) &&
        Objects.equals(this.uaaClientId, configurations.uaaClientId) &&
        Objects.equals(this.uaaClientSecret, configurations.uaaClientSecret) &&
        Objects.equals(this.uaaEndpoint, configurations.uaaEndpoint) &&
        Objects.equals(this.uaaVerifyCert, configurations.uaaVerifyCert) &&
        Objects.equals(this.httpAuthproxyEndpoint, configurations.httpAuthproxyEndpoint) &&
        Objects.equals(this.httpAuthproxyTokenreviewEndpoint, configurations.httpAuthproxyTokenreviewEndpoint) &&
        Objects.equals(this.httpAuthproxyAdminGroups, configurations.httpAuthproxyAdminGroups) &&
        Objects.equals(this.httpAuthproxyAdminUsernames, configurations.httpAuthproxyAdminUsernames) &&
        Objects.equals(this.httpAuthproxyVerifyCert, configurations.httpAuthproxyVerifyCert) &&
        Objects.equals(this.httpAuthproxySkipSearch, configurations.httpAuthproxySkipSearch) &&
        Objects.equals(this.httpAuthproxyServerCertificate, configurations.httpAuthproxyServerCertificate) &&
        Objects.equals(this.oidcName, configurations.oidcName) &&
        Objects.equals(this.oidcEndpoint, configurations.oidcEndpoint) &&
        Objects.equals(this.oidcClientId, configurations.oidcClientId) &&
        Objects.equals(this.oidcClientSecret, configurations.oidcClientSecret) &&
        Objects.equals(this.oidcGroupsClaim, configurations.oidcGroupsClaim) &&
        Objects.equals(this.oidcAdminGroup, configurations.oidcAdminGroup) &&
        Objects.equals(this.oidcGroupFilter, configurations.oidcGroupFilter) &&
        Objects.equals(this.oidcScope, configurations.oidcScope) &&
        Objects.equals(this.oidcUserClaim, configurations.oidcUserClaim) &&
        Objects.equals(this.oidcVerifyCert, configurations.oidcVerifyCert) &&
        Objects.equals(this.oidcAutoOnboard, configurations.oidcAutoOnboard) &&
        Objects.equals(this.oidcExtraRedirectParms, configurations.oidcExtraRedirectParms) &&
        Objects.equals(this.robotTokenDuration, configurations.robotTokenDuration) &&
        Objects.equals(this.robotNamePrefix, configurations.robotNamePrefix) &&
        Objects.equals(this.notificationEnable, configurations.notificationEnable) &&
        Objects.equals(this.quotaPerProjectEnable, configurations.quotaPerProjectEnable) &&
        Objects.equals(this.storagePerProject, configurations.storagePerProject) &&
        Objects.equals(this.auditLogForwardEndpoint, configurations.auditLogForwardEndpoint) &&
        Objects.equals(this.skipAuditLogDatabase, configurations.skipAuditLogDatabase) &&
        Objects.equals(this.sessionTimeout, configurations.sessionTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authMode, ldapBaseDn, ldapFilter, ldapGroupBaseDn, ldapGroupAdminDn, ldapGroupAttributeName, ldapGroupSearchFilter, ldapGroupSearchScope, ldapScope, ldapSearchDn, ldapSearchPassword, ldapTimeout, ldapUid, ldapUrl, ldapVerifyCert, ldapGroupMembershipAttribute, projectCreationRestriction, readOnly, selfRegistration, tokenExpiration, uaaClientId, uaaClientSecret, uaaEndpoint, uaaVerifyCert, httpAuthproxyEndpoint, httpAuthproxyTokenreviewEndpoint, httpAuthproxyAdminGroups, httpAuthproxyAdminUsernames, httpAuthproxyVerifyCert, httpAuthproxySkipSearch, httpAuthproxyServerCertificate, oidcName, oidcEndpoint, oidcClientId, oidcClientSecret, oidcGroupsClaim, oidcAdminGroup, oidcGroupFilter, oidcScope, oidcUserClaim, oidcVerifyCert, oidcAutoOnboard, oidcExtraRedirectParms, robotTokenDuration, robotNamePrefix, notificationEnable, quotaPerProjectEnable, storagePerProject, auditLogForwardEndpoint, skipAuditLogDatabase, sessionTimeout);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Configurations {\n");
    
    sb.append("    authMode: ").append(toIndentedString(authMode)).append("\n");
    sb.append("    ldapBaseDn: ").append(toIndentedString(ldapBaseDn)).append("\n");
    sb.append("    ldapFilter: ").append(toIndentedString(ldapFilter)).append("\n");
    sb.append("    ldapGroupBaseDn: ").append(toIndentedString(ldapGroupBaseDn)).append("\n");
    sb.append("    ldapGroupAdminDn: ").append(toIndentedString(ldapGroupAdminDn)).append("\n");
    sb.append("    ldapGroupAttributeName: ").append(toIndentedString(ldapGroupAttributeName)).append("\n");
    sb.append("    ldapGroupSearchFilter: ").append(toIndentedString(ldapGroupSearchFilter)).append("\n");
    sb.append("    ldapGroupSearchScope: ").append(toIndentedString(ldapGroupSearchScope)).append("\n");
    sb.append("    ldapScope: ").append(toIndentedString(ldapScope)).append("\n");
    sb.append("    ldapSearchDn: ").append(toIndentedString(ldapSearchDn)).append("\n");
    sb.append("    ldapSearchPassword: ").append(toIndentedString(ldapSearchPassword)).append("\n");
    sb.append("    ldapTimeout: ").append(toIndentedString(ldapTimeout)).append("\n");
    sb.append("    ldapUid: ").append(toIndentedString(ldapUid)).append("\n");
    sb.append("    ldapUrl: ").append(toIndentedString(ldapUrl)).append("\n");
    sb.append("    ldapVerifyCert: ").append(toIndentedString(ldapVerifyCert)).append("\n");
    sb.append("    ldapGroupMembershipAttribute: ").append(toIndentedString(ldapGroupMembershipAttribute)).append("\n");
    sb.append("    projectCreationRestriction: ").append(toIndentedString(projectCreationRestriction)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    selfRegistration: ").append(toIndentedString(selfRegistration)).append("\n");
    sb.append("    tokenExpiration: ").append(toIndentedString(tokenExpiration)).append("\n");
    sb.append("    uaaClientId: ").append(toIndentedString(uaaClientId)).append("\n");
    sb.append("    uaaClientSecret: ").append(toIndentedString(uaaClientSecret)).append("\n");
    sb.append("    uaaEndpoint: ").append(toIndentedString(uaaEndpoint)).append("\n");
    sb.append("    uaaVerifyCert: ").append(toIndentedString(uaaVerifyCert)).append("\n");
    sb.append("    httpAuthproxyEndpoint: ").append(toIndentedString(httpAuthproxyEndpoint)).append("\n");
    sb.append("    httpAuthproxyTokenreviewEndpoint: ").append(toIndentedString(httpAuthproxyTokenreviewEndpoint)).append("\n");
    sb.append("    httpAuthproxyAdminGroups: ").append(toIndentedString(httpAuthproxyAdminGroups)).append("\n");
    sb.append("    httpAuthproxyAdminUsernames: ").append(toIndentedString(httpAuthproxyAdminUsernames)).append("\n");
    sb.append("    httpAuthproxyVerifyCert: ").append(toIndentedString(httpAuthproxyVerifyCert)).append("\n");
    sb.append("    httpAuthproxySkipSearch: ").append(toIndentedString(httpAuthproxySkipSearch)).append("\n");
    sb.append("    httpAuthproxyServerCertificate: ").append(toIndentedString(httpAuthproxyServerCertificate)).append("\n");
    sb.append("    oidcName: ").append(toIndentedString(oidcName)).append("\n");
    sb.append("    oidcEndpoint: ").append(toIndentedString(oidcEndpoint)).append("\n");
    sb.append("    oidcClientId: ").append(toIndentedString(oidcClientId)).append("\n");
    sb.append("    oidcClientSecret: ").append(toIndentedString(oidcClientSecret)).append("\n");
    sb.append("    oidcGroupsClaim: ").append(toIndentedString(oidcGroupsClaim)).append("\n");
    sb.append("    oidcAdminGroup: ").append(toIndentedString(oidcAdminGroup)).append("\n");
    sb.append("    oidcGroupFilter: ").append(toIndentedString(oidcGroupFilter)).append("\n");
    sb.append("    oidcScope: ").append(toIndentedString(oidcScope)).append("\n");
    sb.append("    oidcUserClaim: ").append(toIndentedString(oidcUserClaim)).append("\n");
    sb.append("    oidcVerifyCert: ").append(toIndentedString(oidcVerifyCert)).append("\n");
    sb.append("    oidcAutoOnboard: ").append(toIndentedString(oidcAutoOnboard)).append("\n");
    sb.append("    oidcExtraRedirectParms: ").append(toIndentedString(oidcExtraRedirectParms)).append("\n");
    sb.append("    robotTokenDuration: ").append(toIndentedString(robotTokenDuration)).append("\n");
    sb.append("    robotNamePrefix: ").append(toIndentedString(robotNamePrefix)).append("\n");
    sb.append("    notificationEnable: ").append(toIndentedString(notificationEnable)).append("\n");
    sb.append("    quotaPerProjectEnable: ").append(toIndentedString(quotaPerProjectEnable)).append("\n");
    sb.append("    storagePerProject: ").append(toIndentedString(storagePerProject)).append("\n");
    sb.append("    auditLogForwardEndpoint: ").append(toIndentedString(auditLogForwardEndpoint)).append("\n");
    sb.append("    skipAuditLogDatabase: ").append(toIndentedString(skipAuditLogDatabase)).append("\n");
    sb.append("    sessionTimeout: ").append(toIndentedString(sessionTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

