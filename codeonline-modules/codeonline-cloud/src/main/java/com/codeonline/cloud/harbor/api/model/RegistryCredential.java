/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.codeonline.cloud.harbor.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * RegistryCredential
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-30T20:20:43.840Z")
public class RegistryCredential {
  @SerializedName("type")
  private String type = null;

  @SerializedName("access_key")
  private String accessKey = null;

  @SerializedName("access_secret")
  private String accessSecret = null;

  public RegistryCredential type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Credential type, such as &#39;basic&#39;, &#39;oauth&#39;.
   * @return type
  **/
  @ApiModelProperty(value = "Credential type, such as 'basic', 'oauth'.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public RegistryCredential accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Access key, e.g. user name when credential type is &#39;basic&#39;.
   * @return accessKey
  **/
  @ApiModelProperty(value = "Access key, e.g. user name when credential type is 'basic'.")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public RegistryCredential accessSecret(String accessSecret) {
    this.accessSecret = accessSecret;
    return this;
  }

   /**
   * Access secret, e.g. password when credential type is &#39;basic&#39;.
   * @return accessSecret
  **/
  @ApiModelProperty(value = "Access secret, e.g. password when credential type is 'basic'.")
  public String getAccessSecret() {
    return accessSecret;
  }

  public void setAccessSecret(String accessSecret) {
    this.accessSecret = accessSecret;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistryCredential registryCredential = (RegistryCredential) o;
    return Objects.equals(this.type, registryCredential.type) &&
        Objects.equals(this.accessKey, registryCredential.accessKey) &&
        Objects.equals(this.accessSecret, registryCredential.accessSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, accessKey, accessSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistryCredential {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    accessSecret: ").append(toIndentedString(accessSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

