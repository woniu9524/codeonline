/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.codeonline.cloud.harbor.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * the worker pool of job service
 */
@ApiModel(description = "the worker pool of job service")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-12-30T20:20:43.840Z")
public class WorkerPool {
  @SerializedName("pid")
  private Integer pid = null;

  @SerializedName("worker_pool_id")
  private String workerPoolId = null;

  @SerializedName("start_at")
  private String startAt = null;

  @SerializedName("heartbeat_at")
  private String heartbeatAt = null;

  @SerializedName("concurrency")
  private Integer concurrency = null;

  @SerializedName("host")
  private String host = null;

  public WorkerPool pid(Integer pid) {
    this.pid = pid;
    return this;
  }

   /**
   * the process id of jobservice
   * @return pid
  **/
  @ApiModelProperty(value = "the process id of jobservice")
  public Integer getPid() {
    return pid;
  }

  public void setPid(Integer pid) {
    this.pid = pid;
  }

  public WorkerPool workerPoolId(String workerPoolId) {
    this.workerPoolId = workerPoolId;
    return this;
  }

   /**
   * the id of the worker pool
   * @return workerPoolId
  **/
  @ApiModelProperty(value = "the id of the worker pool")
  public String getWorkerPoolId() {
    return workerPoolId;
  }

  public void setWorkerPoolId(String workerPoolId) {
    this.workerPoolId = workerPoolId;
  }

  public WorkerPool startAt(String startAt) {
    this.startAt = startAt;
    return this;
  }

   /**
   * The start time of the work pool
   * @return startAt
  **/
  @ApiModelProperty(value = "The start time of the work pool")
  public String getStartAt() {
    return startAt;
  }

  public void setStartAt(String startAt) {
    this.startAt = startAt;
  }

  public WorkerPool heartbeatAt(String heartbeatAt) {
    this.heartbeatAt = heartbeatAt;
    return this;
  }

   /**
   * The heartbeat time of the work pool
   * @return heartbeatAt
  **/
  @ApiModelProperty(value = "The heartbeat time of the work pool")
  public String getHeartbeatAt() {
    return heartbeatAt;
  }

  public void setHeartbeatAt(String heartbeatAt) {
    this.heartbeatAt = heartbeatAt;
  }

  public WorkerPool concurrency(Integer concurrency) {
    this.concurrency = concurrency;
    return this;
  }

   /**
   * The concurrency of the work pool
   * @return concurrency
  **/
  @ApiModelProperty(value = "The concurrency of the work pool")
  public Integer getConcurrency() {
    return concurrency;
  }

  public void setConcurrency(Integer concurrency) {
    this.concurrency = concurrency;
  }

  public WorkerPool host(String host) {
    this.host = host;
    return this;
  }

   /**
   * The host of the work pool
   * @return host
  **/
  @ApiModelProperty(value = "The host of the work pool")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkerPool workerPool = (WorkerPool) o;
    return Objects.equals(this.pid, workerPool.pid) &&
        Objects.equals(this.workerPoolId, workerPool.workerPoolId) &&
        Objects.equals(this.startAt, workerPool.startAt) &&
        Objects.equals(this.heartbeatAt, workerPool.heartbeatAt) &&
        Objects.equals(this.concurrency, workerPool.concurrency) &&
        Objects.equals(this.host, workerPool.host);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pid, workerPoolId, startAt, heartbeatAt, concurrency, host);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkerPool {\n");
    
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    workerPoolId: ").append(toIndentedString(workerPoolId)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    heartbeatAt: ").append(toIndentedString(heartbeatAt)).append("\n");
    sb.append("    concurrency: ").append(toIndentedString(concurrency)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

